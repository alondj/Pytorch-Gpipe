graph(%0 : Float(10, 3, 224, 224)
      %1 : Float(64, 3, 7, 7)
      %2 : Float(64)
      %3 : Float(64)
      %4 : Float(64)
      %5 : Float(64)
      %6 : Long()
      %7 : Float(64, 64, 3, 3)
      %8 : Float(64)
      %9 : Float(64)
      %10 : Float(64)
      %11 : Float(64)
      %12 : Long()
      %13 : Float(64, 64, 3, 3)
      %14 : Float(64)
      %15 : Float(64)
      %16 : Float(64)
      %17 : Float(64)
      %18 : Long()
      %19 : Float(64, 64, 3, 3)
      %20 : Float(64)
      %21 : Float(64)
      %22 : Float(64)
      %23 : Float(64)
      %24 : Long()
      %25 : Float(64, 64, 3, 3)
      %26 : Float(64)
      %27 : Float(64)
      %28 : Float(64)
      %29 : Float(64)
      %30 : Long()
      %31 : Float(128, 64, 3, 3)
      %32 : Float(128)
      %33 : Float(128)
      %34 : Float(128)
      %35 : Float(128)
      %36 : Long()
      %37 : Float(128, 128, 3, 3)
      %38 : Float(128)
      %39 : Float(128)
      %40 : Float(128)
      %41 : Float(128)
      %42 : Long()
      %43 : Float(128, 64, 1, 1)
      %44 : Float(128)
      %45 : Float(128)
      %46 : Float(128)
      %47 : Float(128)
      %48 : Long()
      %49 : Float(128, 128, 3, 3)
      %50 : Float(128)
      %51 : Float(128)
      %52 : Float(128)
      %53 : Float(128)
      %54 : Long()
      %55 : Float(128, 128, 3, 3)
      %56 : Float(128)
      %57 : Float(128)
      %58 : Float(128)
      %59 : Float(128)
      %60 : Long()
      %61 : Float(256, 128, 3, 3)
      %62 : Float(256)
      %63 : Float(256)
      %64 : Float(256)
      %65 : Float(256)
      %66 : Long()
      %67 : Float(256, 256, 3, 3)
      %68 : Float(256)
      %69 : Float(256)
      %70 : Float(256)
      %71 : Float(256)
      %72 : Long()
      %73 : Float(256, 128, 1, 1)
      %74 : Float(256)
      %75 : Float(256)
      %76 : Float(256)
      %77 : Float(256)
      %78 : Long()
      %79 : Float(256, 256, 3, 3)
      %80 : Float(256)
      %81 : Float(256)
      %82 : Float(256)
      %83 : Float(256)
      %84 : Long()
      %85 : Float(256, 256, 3, 3)
      %86 : Float(256)
      %87 : Float(256)
      %88 : Float(256)
      %89 : Float(256)
      %90 : Long()
      %91 : Float(512, 256, 3, 3)
      %92 : Float(512)
      %93 : Float(512)
      %94 : Float(512)
      %95 : Float(512)
      %96 : Long()
      %97 : Float(512, 512, 3, 3)
      %98 : Float(512)
      %99 : Float(512)
      %100 : Float(512)
      %101 : Float(512)
      %102 : Long()
      %103 : Float(512, 256, 1, 1)
      %104 : Float(512)
      %105 : Float(512)
      %106 : Float(512)
      %107 : Float(512)
      %108 : Long()
      %109 : Float(512, 512, 3, 3)
      %110 : Float(512)
      %111 : Float(512)
      %112 : Float(512)
      %113 : Float(512)
      %114 : Long()
      %115 : Float(512, 512, 3, 3)
      %116 : Float(512)
      %117 : Float(512)
      %118 : Float(512)
      %119 : Float(512)
      %120 : Long()
      %121 : Float(1000, 512)
      %122 : Float(1000)) {
  %123 : Tensor = prim::Undefined(), scope: ResNet/Conv2d[conv1]
  %124 : int = prim::Constant[value=2](), scope: ResNet/Conv2d[conv1]
  %125 : int = prim::Constant[value=2](), scope: ResNet/Conv2d[conv1]
  %126 : int[] = prim::ListConstruct(%124, %125), scope: ResNet/Conv2d[conv1]
  %127 : int = prim::Constant[value=3](), scope: ResNet/Conv2d[conv1]
  %128 : int = prim::Constant[value=3](), scope: ResNet/Conv2d[conv1]
  %129 : int[] = prim::ListConstruct(%127, %128), scope: ResNet/Conv2d[conv1]
  %130 : int = prim::Constant[value=1](), scope: ResNet/Conv2d[conv1]
  %131 : int = prim::Constant[value=1](), scope: ResNet/Conv2d[conv1]
  %132 : int[] = prim::ListConstruct(%130, %131), scope: ResNet/Conv2d[conv1]
  %133 : bool = prim::Constant[value=0](), scope: ResNet/Conv2d[conv1]
  %134 : int = prim::Constant[value=0](), scope: ResNet/Conv2d[conv1]
  %135 : int = prim::Constant[value=0](), scope: ResNet/Conv2d[conv1]
  %136 : int[] = prim::ListConstruct(%134, %135), scope: ResNet/Conv2d[conv1]
  %137 : int = prim::Constant[value=1](), scope: ResNet/Conv2d[conv1]
  %138 : bool = prim::Constant[value=0](), scope: ResNet/Conv2d[conv1]
  %139 : bool = prim::Constant[value=0](), scope: ResNet/Conv2d[conv1]
  %140 : bool = prim::Constant[value=1](), scope: ResNet/Conv2d[conv1]
  %input.1 : Float(10, 64, 112, 112) = aten::_convolution(%0, %1, %123, %126, %129, %132, %133, %136, %137, %138, %139, %140), scope: ResNet/Conv2d[conv1]
  %142 : Long() = prim::Constant[value={1}](), scope: ResNet/BatchNorm2d[bn1]
  %143 : int = prim::Constant[value=1](), scope: ResNet/BatchNorm2d[bn1]
  %144 : Long() = aten::add_(%6, %142, %143), scope: ResNet/BatchNorm2d[bn1]
  %145 : int = prim::Constant[value=0](), scope: ResNet/BatchNorm2d[bn1]
  %146 : int = aten::size(%input.1, %145), scope: ResNet/BatchNorm2d[bn1]
  %147 : Long() = prim::NumToTensor(%146), scope: ResNet/BatchNorm2d[bn1]
  %148 : int = prim::Constant[value=1](), scope: ResNet/BatchNorm2d[bn1]
  %149 : int = aten::size(%input.1, %148), scope: ResNet/BatchNorm2d[bn1]
  %150 : Long() = prim::NumToTensor(%149), scope: ResNet/BatchNorm2d[bn1]
  %151 : int = prim::Constant[value=2](), scope: ResNet/BatchNorm2d[bn1]
  %152 : int = aten::size(%input.1, %151), scope: ResNet/BatchNorm2d[bn1]
  %153 : Long() = prim::NumToTensor(%152), scope: ResNet/BatchNorm2d[bn1]
  %154 : int = prim::Constant[value=3](), scope: ResNet/BatchNorm2d[bn1]
  %155 : int = aten::size(%input.1, %154), scope: ResNet/BatchNorm2d[bn1]
  %156 : Long() = prim::NumToTensor(%155), scope: ResNet/BatchNorm2d[bn1]
  %157 : Long() = aten::mul_(%147, %153), scope: ResNet/BatchNorm2d[bn1]
  %158 : Long() = aten::mul_(%157, %156), scope: ResNet/BatchNorm2d[bn1]
  %159 : int = prim::Constant[value=1](), scope: ResNet/BatchNorm2d[bn1]
  %160 : Byte() = aten::eq(%158, %159), scope: ResNet/BatchNorm2d[bn1]
  %161 : bool = prim::Constant[value=1](), scope: ResNet/BatchNorm2d[bn1]
  %162 : float = prim::Constant[value=0.1](), scope: ResNet/BatchNorm2d[bn1]
  %163 : float = prim::Constant[value=1e-05](), scope: ResNet/BatchNorm2d[bn1]
  %164 : bool = prim::Constant[value=1](), scope: ResNet/BatchNorm2d[bn1]
  %input.2 : Float(10, 64, 112, 112) = aten::batch_norm(%input.1, %2, %3, %4, %5, %161, %162, %163, %164), scope: ResNet/BatchNorm2d[bn1]
  %166 : float = prim::Constant[value=0](), scope: ResNet/ReLU[relu]
  %167 : float = prim::Constant[value=0](), scope: ResNet/ReLU[relu]
  %input.3 : Float(10, 64, 112, 112) = aten::threshold_(%input.2, %166, %167), scope: ResNet/ReLU[relu]
  %169 : int = prim::Constant[value=3](), scope: ResNet/MaxPool2d[maxpool]
  %170 : int = prim::Constant[value=3](), scope: ResNet/MaxPool2d[maxpool]
  %171 : int[] = prim::ListConstruct(%169, %170), scope: ResNet/MaxPool2d[maxpool]
  %172 : int = prim::Constant[value=2](), scope: ResNet/MaxPool2d[maxpool]
  %173 : int = prim::Constant[value=2](), scope: ResNet/MaxPool2d[maxpool]
  %174 : int[] = prim::ListConstruct(%172, %173), scope: ResNet/MaxPool2d[maxpool]
  %175 : int = prim::Constant[value=1](), scope: ResNet/MaxPool2d[maxpool]
  %176 : int = prim::Constant[value=1](), scope: ResNet/MaxPool2d[maxpool]
  %177 : int[] = prim::ListConstruct(%175, %176), scope: ResNet/MaxPool2d[maxpool]
  %178 : int = prim::Constant[value=1](), scope: ResNet/MaxPool2d[maxpool]
  %179 : int = prim::Constant[value=1](), scope: ResNet/MaxPool2d[maxpool]
  %180 : int[] = prim::ListConstruct(%178, %179), scope: ResNet/MaxPool2d[maxpool]
  %181 : bool = prim::Constant[value=0](), scope: ResNet/MaxPool2d[maxpool]
  %182 : Float(10, 64, 56, 56), %183 : Long(10, 64, 56, 56) = aten::max_pool2d_with_indices(%input.3, %171, %174, %177, %180, %181), scope: ResNet/MaxPool2d[maxpool]
  %184 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %185 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %186 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %187 : int[] = prim::ListConstruct(%185, %186), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %188 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %189 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %190 : int[] = prim::ListConstruct(%188, %189), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %191 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %192 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %193 : int[] = prim::ListConstruct(%191, %192), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %194 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %195 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %196 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %197 : int[] = prim::ListConstruct(%195, %196), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %198 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %199 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %200 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %201 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %input.4 : Float(10, 64, 56, 56) = aten::_convolution(%182, %7, %184, %187, %190, %193, %194, %197, %198, %199, %200, %201), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv1]
  %203 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %204 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %205 : Long() = aten::add_(%12, %203, %204), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %206 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %207 : int = aten::size(%input.4, %206), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %208 : Long() = prim::NumToTensor(%207), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %209 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %210 : int = aten::size(%input.4, %209), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %211 : Long() = prim::NumToTensor(%210), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %212 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %213 : int = aten::size(%input.4, %212), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %214 : Long() = prim::NumToTensor(%213), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %215 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %216 : int = aten::size(%input.4, %215), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %217 : Long() = prim::NumToTensor(%216), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %218 : Long() = aten::mul_(%208, %214), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %219 : Long() = aten::mul_(%218, %217), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %220 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %221 : Byte() = aten::eq(%219, %220), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %222 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %223 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %224 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %225 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %input.5 : Float(10, 64, 56, 56) = aten::batch_norm(%input.4, %8, %9, %10, %11, %222, %223, %224, %225), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn1]
  %227 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]
  %228 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]
  %229 : Float(10, 64, 56, 56) = aten::threshold_(%input.5, %227, %228), scope: ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]
  %230 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %231 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %232 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %233 : int[] = prim::ListConstruct(%231, %232), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %234 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %235 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %236 : int[] = prim::ListConstruct(%234, %235), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %237 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %238 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %239 : int[] = prim::ListConstruct(%237, %238), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %240 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %241 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %242 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %243 : int[] = prim::ListConstruct(%241, %242), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %244 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %245 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %246 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %247 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %input.6 : Float(10, 64, 56, 56) = aten::_convolution(%229, %13, %230, %233, %236, %239, %240, %243, %244, %245, %246, %247), scope: ResNet/Sequential[layer1]/BasicBlock[0]/Conv2d[conv2]
  %249 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %250 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %251 : Long() = aten::add_(%18, %249, %250), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %252 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %253 : int = aten::size(%input.6, %252), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %254 : Long() = prim::NumToTensor(%253), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %255 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %256 : int = aten::size(%input.6, %255), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %257 : Long() = prim::NumToTensor(%256), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %258 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %259 : int = aten::size(%input.6, %258), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %260 : Long() = prim::NumToTensor(%259), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %261 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %262 : int = aten::size(%input.6, %261), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %263 : Long() = prim::NumToTensor(%262), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %264 : Long() = aten::mul_(%254, %260), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %265 : Long() = aten::mul_(%264, %263), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %266 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %267 : Byte() = aten::eq(%265, %266), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %268 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %269 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %270 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %271 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %272 : Float(10, 64, 56, 56) = aten::batch_norm(%input.6, %14, %15, %16, %17, %268, %269, %270, %271), scope: ResNet/Sequential[layer1]/BasicBlock[0]/BatchNorm2d[bn2]
  %273 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[0]
  %input.7 : Float(10, 64, 56, 56) = aten::add_(%272, %182, %273), scope: ResNet/Sequential[layer1]/BasicBlock[0]
  %275 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]
  %276 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]
  %277 : Float(10, 64, 56, 56) = aten::threshold_(%input.7, %275, %276), scope: ResNet/Sequential[layer1]/BasicBlock[0]/ReLU[relu]
  %278 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %279 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %280 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %281 : int[] = prim::ListConstruct(%279, %280), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %282 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %283 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %284 : int[] = prim::ListConstruct(%282, %283), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %285 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %286 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %287 : int[] = prim::ListConstruct(%285, %286), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %288 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %289 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %290 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %291 : int[] = prim::ListConstruct(%289, %290), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %292 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %293 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %294 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %295 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %input.8 : Float(10, 64, 56, 56) = aten::_convolution(%277, %19, %278, %281, %284, %287, %288, %291, %292, %293, %294, %295), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv1]
  %297 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %298 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %299 : Long() = aten::add_(%24, %297, %298), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %300 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %301 : int = aten::size(%input.8, %300), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %302 : Long() = prim::NumToTensor(%301), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %303 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %304 : int = aten::size(%input.8, %303), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %305 : Long() = prim::NumToTensor(%304), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %306 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %307 : int = aten::size(%input.8, %306), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %308 : Long() = prim::NumToTensor(%307), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %309 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %310 : int = aten::size(%input.8, %309), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %311 : Long() = prim::NumToTensor(%310), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %312 : Long() = aten::mul_(%302, %308), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %313 : Long() = aten::mul_(%312, %311), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %314 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %315 : Byte() = aten::eq(%313, %314), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %316 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %317 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %318 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %319 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %input.9 : Float(10, 64, 56, 56) = aten::batch_norm(%input.8, %20, %21, %22, %23, %316, %317, %318, %319), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn1]
  %321 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]
  %322 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]
  %323 : Float(10, 64, 56, 56) = aten::threshold_(%input.9, %321, %322), scope: ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]
  %324 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %325 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %326 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %327 : int[] = prim::ListConstruct(%325, %326), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %328 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %329 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %330 : int[] = prim::ListConstruct(%328, %329), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %331 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %332 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %333 : int[] = prim::ListConstruct(%331, %332), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %334 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %335 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %336 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %337 : int[] = prim::ListConstruct(%335, %336), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %338 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %339 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %340 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %341 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %input.10 : Float(10, 64, 56, 56) = aten::_convolution(%323, %25, %324, %327, %330, %333, %334, %337, %338, %339, %340, %341), scope: ResNet/Sequential[layer1]/BasicBlock[1]/Conv2d[conv2]
  %343 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %344 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %345 : Long() = aten::add_(%30, %343, %344), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %346 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %347 : int = aten::size(%input.10, %346), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %348 : Long() = prim::NumToTensor(%347), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %349 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %350 : int = aten::size(%input.10, %349), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %351 : Long() = prim::NumToTensor(%350), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %352 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %353 : int = aten::size(%input.10, %352), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %354 : Long() = prim::NumToTensor(%353), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %355 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %356 : int = aten::size(%input.10, %355), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %357 : Long() = prim::NumToTensor(%356), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %358 : Long() = aten::mul_(%348, %354), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %359 : Long() = aten::mul_(%358, %357), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %360 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %361 : Byte() = aten::eq(%359, %360), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %362 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %363 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %364 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %365 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %366 : Float(10, 64, 56, 56) = aten::batch_norm(%input.10, %26, %27, %28, %29, %362, %363, %364, %365), scope: ResNet/Sequential[layer1]/BasicBlock[1]/BatchNorm2d[bn2]
  %367 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer1]/BasicBlock[1]
  %input.11 : Float(10, 64, 56, 56) = aten::add_(%366, %277, %367), scope: ResNet/Sequential[layer1]/BasicBlock[1]
  %369 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]
  %370 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]
  %371 : Float(10, 64, 56, 56) = aten::threshold_(%input.11, %369, %370), scope: ResNet/Sequential[layer1]/BasicBlock[1]/ReLU[relu]
  %372 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %373 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %374 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %375 : int[] = prim::ListConstruct(%373, %374), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %376 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %377 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %378 : int[] = prim::ListConstruct(%376, %377), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %379 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %380 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %381 : int[] = prim::ListConstruct(%379, %380), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %382 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %383 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %384 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %385 : int[] = prim::ListConstruct(%383, %384), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %386 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %387 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %388 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %389 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %input.12 : Float(10, 128, 28, 28) = aten::_convolution(%371, %31, %372, %375, %378, %381, %382, %385, %386, %387, %388, %389), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv1]
  %391 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %392 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %393 : Long() = aten::add_(%36, %391, %392), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %394 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %395 : int = aten::size(%input.12, %394), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %396 : Long() = prim::NumToTensor(%395), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %397 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %398 : int = aten::size(%input.12, %397), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %399 : Long() = prim::NumToTensor(%398), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %400 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %401 : int = aten::size(%input.12, %400), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %402 : Long() = prim::NumToTensor(%401), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %403 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %404 : int = aten::size(%input.12, %403), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %405 : Long() = prim::NumToTensor(%404), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %406 : Long() = aten::mul_(%396, %402), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %407 : Long() = aten::mul_(%406, %405), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %408 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %409 : Byte() = aten::eq(%407, %408), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %410 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %411 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %412 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %413 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %input.13 : Float(10, 128, 28, 28) = aten::batch_norm(%input.12, %32, %33, %34, %35, %410, %411, %412, %413), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn1]
  %415 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]
  %416 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]
  %417 : Float(10, 128, 28, 28) = aten::threshold_(%input.13, %415, %416), scope: ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]
  %418 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %419 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %420 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %421 : int[] = prim::ListConstruct(%419, %420), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %422 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %423 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %424 : int[] = prim::ListConstruct(%422, %423), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %425 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %426 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %427 : int[] = prim::ListConstruct(%425, %426), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %428 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %429 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %430 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %431 : int[] = prim::ListConstruct(%429, %430), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %432 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %433 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %434 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %435 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %input.14 : Float(10, 128, 28, 28) = aten::_convolution(%417, %37, %418, %421, %424, %427, %428, %431, %432, %433, %434, %435), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Conv2d[conv2]
  %437 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %438 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %439 : Long() = aten::add_(%42, %437, %438), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %440 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %441 : int = aten::size(%input.14, %440), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %442 : Long() = prim::NumToTensor(%441), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %443 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %444 : int = aten::size(%input.14, %443), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %445 : Long() = prim::NumToTensor(%444), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %446 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %447 : int = aten::size(%input.14, %446), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %448 : Long() = prim::NumToTensor(%447), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %449 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %450 : int = aten::size(%input.14, %449), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %451 : Long() = prim::NumToTensor(%450), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %452 : Long() = aten::mul_(%442, %448), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %453 : Long() = aten::mul_(%452, %451), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %454 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %455 : Byte() = aten::eq(%453, %454), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %456 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %457 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %458 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %459 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %460 : Float(10, 128, 28, 28) = aten::batch_norm(%input.14, %38, %39, %40, %41, %456, %457, %458, %459), scope: ResNet/Sequential[layer2]/BasicBlock[0]/BatchNorm2d[bn2]
  %461 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %462 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %463 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %464 : int[] = prim::ListConstruct(%462, %463), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %465 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %466 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %467 : int[] = prim::ListConstruct(%465, %466), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %468 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %469 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %470 : int[] = prim::ListConstruct(%468, %469), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %471 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %472 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %473 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %474 : int[] = prim::ListConstruct(%472, %473), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %475 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %476 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %477 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %478 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %input.15 : Float(10, 128, 28, 28) = aten::_convolution(%371, %43, %461, %464, %467, %470, %471, %474, %475, %476, %477, %478), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %480 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %481 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %482 : Long() = aten::add_(%48, %480, %481), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %483 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %484 : int = aten::size(%input.15, %483), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %485 : Long() = prim::NumToTensor(%484), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %486 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %487 : int = aten::size(%input.15, %486), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %488 : Long() = prim::NumToTensor(%487), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %489 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %490 : int = aten::size(%input.15, %489), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %491 : Long() = prim::NumToTensor(%490), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %492 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %493 : int = aten::size(%input.15, %492), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %494 : Long() = prim::NumToTensor(%493), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %495 : Long() = aten::mul_(%485, %491), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %496 : Long() = aten::mul_(%495, %494), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %497 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %498 : Byte() = aten::eq(%496, %497), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %499 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %500 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %501 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %502 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %503 : Float(10, 128, 28, 28) = aten::batch_norm(%input.15, %44, %45, %46, %47, %499, %500, %501, %502), scope: ResNet/Sequential[layer2]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %504 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[0]
  %input.16 : Float(10, 128, 28, 28) = aten::add_(%460, %503, %504), scope: ResNet/Sequential[layer2]/BasicBlock[0]
  %506 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]
  %507 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]
  %508 : Float(10, 128, 28, 28) = aten::threshold_(%input.16, %506, %507), scope: ResNet/Sequential[layer2]/BasicBlock[0]/ReLU[relu]
  %509 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %510 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %511 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %512 : int[] = prim::ListConstruct(%510, %511), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %513 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %514 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %515 : int[] = prim::ListConstruct(%513, %514), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %516 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %517 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %518 : int[] = prim::ListConstruct(%516, %517), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %519 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %520 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %521 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %522 : int[] = prim::ListConstruct(%520, %521), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %523 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %524 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %525 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %526 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %input.17 : Float(10, 128, 28, 28) = aten::_convolution(%508, %49, %509, %512, %515, %518, %519, %522, %523, %524, %525, %526), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv1]
  %528 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %529 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %530 : Long() = aten::add_(%54, %528, %529), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %531 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %532 : int = aten::size(%input.17, %531), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %533 : Long() = prim::NumToTensor(%532), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %534 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %535 : int = aten::size(%input.17, %534), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %536 : Long() = prim::NumToTensor(%535), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %537 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %538 : int = aten::size(%input.17, %537), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %539 : Long() = prim::NumToTensor(%538), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %540 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %541 : int = aten::size(%input.17, %540), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %542 : Long() = prim::NumToTensor(%541), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %543 : Long() = aten::mul_(%533, %539), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %544 : Long() = aten::mul_(%543, %542), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %545 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %546 : Byte() = aten::eq(%544, %545), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %547 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %548 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %549 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %550 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %input.18 : Float(10, 128, 28, 28) = aten::batch_norm(%input.17, %50, %51, %52, %53, %547, %548, %549, %550), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn1]
  %552 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]
  %553 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]
  %554 : Float(10, 128, 28, 28) = aten::threshold_(%input.18, %552, %553), scope: ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]
  %555 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %556 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %557 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %558 : int[] = prim::ListConstruct(%556, %557), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %559 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %560 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %561 : int[] = prim::ListConstruct(%559, %560), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %562 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %563 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %564 : int[] = prim::ListConstruct(%562, %563), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %565 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %566 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %567 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %568 : int[] = prim::ListConstruct(%566, %567), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %569 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %570 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %571 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %572 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %input.19 : Float(10, 128, 28, 28) = aten::_convolution(%554, %55, %555, %558, %561, %564, %565, %568, %569, %570, %571, %572), scope: ResNet/Sequential[layer2]/BasicBlock[1]/Conv2d[conv2]
  %574 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %575 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %576 : Long() = aten::add_(%60, %574, %575), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %577 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %578 : int = aten::size(%input.19, %577), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %579 : Long() = prim::NumToTensor(%578), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %580 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %581 : int = aten::size(%input.19, %580), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %582 : Long() = prim::NumToTensor(%581), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %583 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %584 : int = aten::size(%input.19, %583), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %585 : Long() = prim::NumToTensor(%584), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %586 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %587 : int = aten::size(%input.19, %586), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %588 : Long() = prim::NumToTensor(%587), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %589 : Long() = aten::mul_(%579, %585), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %590 : Long() = aten::mul_(%589, %588), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %591 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %592 : Byte() = aten::eq(%590, %591), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %593 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %594 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %595 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %596 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %597 : Float(10, 128, 28, 28) = aten::batch_norm(%input.19, %56, %57, %58, %59, %593, %594, %595, %596), scope: ResNet/Sequential[layer2]/BasicBlock[1]/BatchNorm2d[bn2]
  %598 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer2]/BasicBlock[1]
  %input.20 : Float(10, 128, 28, 28) = aten::add_(%597, %508, %598), scope: ResNet/Sequential[layer2]/BasicBlock[1]
  %600 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]
  %601 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]
  %602 : Float(10, 128, 28, 28) = aten::threshold_(%input.20, %600, %601), scope: ResNet/Sequential[layer2]/BasicBlock[1]/ReLU[relu]
  %603 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %604 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %605 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %606 : int[] = prim::ListConstruct(%604, %605), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %607 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %608 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %609 : int[] = prim::ListConstruct(%607, %608), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %610 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %611 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %612 : int[] = prim::ListConstruct(%610, %611), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %613 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %614 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %615 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %616 : int[] = prim::ListConstruct(%614, %615), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %617 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %618 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %619 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %620 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %input.21 : Float(10, 256, 14, 14) = aten::_convolution(%602, %61, %603, %606, %609, %612, %613, %616, %617, %618, %619, %620), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv1]
  %622 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %623 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %624 : Long() = aten::add_(%66, %622, %623), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %625 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %626 : int = aten::size(%input.21, %625), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %627 : Long() = prim::NumToTensor(%626), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %628 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %629 : int = aten::size(%input.21, %628), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %630 : Long() = prim::NumToTensor(%629), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %631 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %632 : int = aten::size(%input.21, %631), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %633 : Long() = prim::NumToTensor(%632), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %634 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %635 : int = aten::size(%input.21, %634), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %636 : Long() = prim::NumToTensor(%635), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %637 : Long() = aten::mul_(%627, %633), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %638 : Long() = aten::mul_(%637, %636), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %639 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %640 : Byte() = aten::eq(%638, %639), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %641 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %642 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %643 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %644 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %input.22 : Float(10, 256, 14, 14) = aten::batch_norm(%input.21, %62, %63, %64, %65, %641, %642, %643, %644), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn1]
  %646 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]
  %647 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]
  %648 : Float(10, 256, 14, 14) = aten::threshold_(%input.22, %646, %647), scope: ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]
  %649 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %650 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %651 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %652 : int[] = prim::ListConstruct(%650, %651), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %653 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %654 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %655 : int[] = prim::ListConstruct(%653, %654), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %656 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %657 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %658 : int[] = prim::ListConstruct(%656, %657), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %659 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %660 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %661 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %662 : int[] = prim::ListConstruct(%660, %661), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %663 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %664 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %665 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %666 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %input.23 : Float(10, 256, 14, 14) = aten::_convolution(%648, %67, %649, %652, %655, %658, %659, %662, %663, %664, %665, %666), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Conv2d[conv2]
  %668 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %669 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %670 : Long() = aten::add_(%72, %668, %669), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %671 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %672 : int = aten::size(%input.23, %671), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %673 : Long() = prim::NumToTensor(%672), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %674 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %675 : int = aten::size(%input.23, %674), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %676 : Long() = prim::NumToTensor(%675), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %677 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %678 : int = aten::size(%input.23, %677), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %679 : Long() = prim::NumToTensor(%678), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %680 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %681 : int = aten::size(%input.23, %680), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %682 : Long() = prim::NumToTensor(%681), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %683 : Long() = aten::mul_(%673, %679), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %684 : Long() = aten::mul_(%683, %682), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %685 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %686 : Byte() = aten::eq(%684, %685), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %687 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %688 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %689 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %690 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %691 : Float(10, 256, 14, 14) = aten::batch_norm(%input.23, %68, %69, %70, %71, %687, %688, %689, %690), scope: ResNet/Sequential[layer3]/BasicBlock[0]/BatchNorm2d[bn2]
  %692 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %693 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %694 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %695 : int[] = prim::ListConstruct(%693, %694), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %696 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %697 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %698 : int[] = prim::ListConstruct(%696, %697), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %699 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %700 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %701 : int[] = prim::ListConstruct(%699, %700), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %702 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %703 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %704 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %705 : int[] = prim::ListConstruct(%703, %704), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %706 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %707 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %708 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %709 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %input.24 : Float(10, 256, 14, 14) = aten::_convolution(%602, %73, %692, %695, %698, %701, %702, %705, %706, %707, %708, %709), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %711 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %712 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %713 : Long() = aten::add_(%78, %711, %712), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %714 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %715 : int = aten::size(%input.24, %714), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %716 : Long() = prim::NumToTensor(%715), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %717 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %718 : int = aten::size(%input.24, %717), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %719 : Long() = prim::NumToTensor(%718), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %720 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %721 : int = aten::size(%input.24, %720), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %722 : Long() = prim::NumToTensor(%721), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %723 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %724 : int = aten::size(%input.24, %723), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %725 : Long() = prim::NumToTensor(%724), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %726 : Long() = aten::mul_(%716, %722), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %727 : Long() = aten::mul_(%726, %725), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %728 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %729 : Byte() = aten::eq(%727, %728), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %730 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %731 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %732 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %733 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %734 : Float(10, 256, 14, 14) = aten::batch_norm(%input.24, %74, %75, %76, %77, %730, %731, %732, %733), scope: ResNet/Sequential[layer3]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %735 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[0]
  %input.25 : Float(10, 256, 14, 14) = aten::add_(%691, %734, %735), scope: ResNet/Sequential[layer3]/BasicBlock[0]
  %737 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]
  %738 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]
  %739 : Float(10, 256, 14, 14) = aten::threshold_(%input.25, %737, %738), scope: ResNet/Sequential[layer3]/BasicBlock[0]/ReLU[relu]
  %740 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %741 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %742 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %743 : int[] = prim::ListConstruct(%741, %742), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %744 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %745 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %746 : int[] = prim::ListConstruct(%744, %745), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %747 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %748 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %749 : int[] = prim::ListConstruct(%747, %748), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %750 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %751 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %752 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %753 : int[] = prim::ListConstruct(%751, %752), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %754 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %755 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %756 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %757 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %input.26 : Float(10, 256, 14, 14) = aten::_convolution(%739, %79, %740, %743, %746, %749, %750, %753, %754, %755, %756, %757), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv1]
  %759 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %760 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %761 : Long() = aten::add_(%84, %759, %760), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %762 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %763 : int = aten::size(%input.26, %762), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %764 : Long() = prim::NumToTensor(%763), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %765 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %766 : int = aten::size(%input.26, %765), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %767 : Long() = prim::NumToTensor(%766), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %768 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %769 : int = aten::size(%input.26, %768), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %770 : Long() = prim::NumToTensor(%769), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %771 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %772 : int = aten::size(%input.26, %771), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %773 : Long() = prim::NumToTensor(%772), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %774 : Long() = aten::mul_(%764, %770), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %775 : Long() = aten::mul_(%774, %773), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %776 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %777 : Byte() = aten::eq(%775, %776), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %778 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %779 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %780 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %781 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %input.27 : Float(10, 256, 14, 14) = aten::batch_norm(%input.26, %80, %81, %82, %83, %778, %779, %780, %781), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn1]
  %783 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]
  %784 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]
  %785 : Float(10, 256, 14, 14) = aten::threshold_(%input.27, %783, %784), scope: ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]
  %786 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %787 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %788 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %789 : int[] = prim::ListConstruct(%787, %788), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %790 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %791 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %792 : int[] = prim::ListConstruct(%790, %791), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %793 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %794 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %795 : int[] = prim::ListConstruct(%793, %794), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %796 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %797 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %798 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %799 : int[] = prim::ListConstruct(%797, %798), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %800 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %801 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %802 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %803 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %input.28 : Float(10, 256, 14, 14) = aten::_convolution(%785, %85, %786, %789, %792, %795, %796, %799, %800, %801, %802, %803), scope: ResNet/Sequential[layer3]/BasicBlock[1]/Conv2d[conv2]
  %805 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %806 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %807 : Long() = aten::add_(%90, %805, %806), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %808 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %809 : int = aten::size(%input.28, %808), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %810 : Long() = prim::NumToTensor(%809), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %811 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %812 : int = aten::size(%input.28, %811), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %813 : Long() = prim::NumToTensor(%812), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %814 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %815 : int = aten::size(%input.28, %814), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %816 : Long() = prim::NumToTensor(%815), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %817 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %818 : int = aten::size(%input.28, %817), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %819 : Long() = prim::NumToTensor(%818), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %820 : Long() = aten::mul_(%810, %816), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %821 : Long() = aten::mul_(%820, %819), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %822 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %823 : Byte() = aten::eq(%821, %822), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %824 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %825 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %826 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %827 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %828 : Float(10, 256, 14, 14) = aten::batch_norm(%input.28, %86, %87, %88, %89, %824, %825, %826, %827), scope: ResNet/Sequential[layer3]/BasicBlock[1]/BatchNorm2d[bn2]
  %829 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer3]/BasicBlock[1]
  %input.29 : Float(10, 256, 14, 14) = aten::add_(%828, %739, %829), scope: ResNet/Sequential[layer3]/BasicBlock[1]
  %831 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]
  %832 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]
  %833 : Float(10, 256, 14, 14) = aten::threshold_(%input.29, %831, %832), scope: ResNet/Sequential[layer3]/BasicBlock[1]/ReLU[relu]
  %834 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %835 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %836 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %837 : int[] = prim::ListConstruct(%835, %836), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %838 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %839 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %840 : int[] = prim::ListConstruct(%838, %839), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %841 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %842 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %843 : int[] = prim::ListConstruct(%841, %842), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %844 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %845 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %846 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %847 : int[] = prim::ListConstruct(%845, %846), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %848 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %849 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %850 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %851 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %input.30 : Float(10, 512, 7, 7) = aten::_convolution(%833, %91, %834, %837, %840, %843, %844, %847, %848, %849, %850, %851), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv1]
  %853 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %854 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %855 : Long() = aten::add_(%96, %853, %854), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %856 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %857 : int = aten::size(%input.30, %856), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %858 : Long() = prim::NumToTensor(%857), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %859 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %860 : int = aten::size(%input.30, %859), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %861 : Long() = prim::NumToTensor(%860), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %862 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %863 : int = aten::size(%input.30, %862), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %864 : Long() = prim::NumToTensor(%863), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %865 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %866 : int = aten::size(%input.30, %865), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %867 : Long() = prim::NumToTensor(%866), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %868 : Long() = aten::mul_(%858, %864), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %869 : Long() = aten::mul_(%868, %867), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %870 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %871 : Byte() = aten::eq(%869, %870), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %872 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %873 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %874 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %875 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %input.31 : Float(10, 512, 7, 7) = aten::batch_norm(%input.30, %92, %93, %94, %95, %872, %873, %874, %875), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn1]
  %877 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]
  %878 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]
  %879 : Float(10, 512, 7, 7) = aten::threshold_(%input.31, %877, %878), scope: ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]
  %880 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %881 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %882 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %883 : int[] = prim::ListConstruct(%881, %882), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %884 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %885 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %886 : int[] = prim::ListConstruct(%884, %885), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %887 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %888 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %889 : int[] = prim::ListConstruct(%887, %888), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %890 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %891 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %892 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %893 : int[] = prim::ListConstruct(%891, %892), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %894 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %895 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %896 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %897 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %input.32 : Float(10, 512, 7, 7) = aten::_convolution(%879, %97, %880, %883, %886, %889, %890, %893, %894, %895, %896, %897), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Conv2d[conv2]
  %899 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %900 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %901 : Long() = aten::add_(%102, %899, %900), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %902 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %903 : int = aten::size(%input.32, %902), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %904 : Long() = prim::NumToTensor(%903), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %905 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %906 : int = aten::size(%input.32, %905), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %907 : Long() = prim::NumToTensor(%906), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %908 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %909 : int = aten::size(%input.32, %908), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %910 : Long() = prim::NumToTensor(%909), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %911 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %912 : int = aten::size(%input.32, %911), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %913 : Long() = prim::NumToTensor(%912), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %914 : Long() = aten::mul_(%904, %910), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %915 : Long() = aten::mul_(%914, %913), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %916 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %917 : Byte() = aten::eq(%915, %916), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %918 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %919 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %920 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %921 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %922 : Float(10, 512, 7, 7) = aten::batch_norm(%input.32, %98, %99, %100, %101, %918, %919, %920, %921), scope: ResNet/Sequential[layer4]/BasicBlock[0]/BatchNorm2d[bn2]
  %923 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %924 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %925 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %926 : int[] = prim::ListConstruct(%924, %925), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %927 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %928 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %929 : int[] = prim::ListConstruct(%927, %928), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %930 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %931 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %932 : int[] = prim::ListConstruct(%930, %931), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %933 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %934 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %935 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %936 : int[] = prim::ListConstruct(%934, %935), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %937 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %938 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %939 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %940 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %input.33 : Float(10, 512, 7, 7) = aten::_convolution(%833, %103, %923, %926, %929, %932, %933, %936, %937, %938, %939, %940), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/Conv2d[0]
  %942 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %943 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %944 : Long() = aten::add_(%108, %942, %943), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %945 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %946 : int = aten::size(%input.33, %945), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %947 : Long() = prim::NumToTensor(%946), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %948 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %949 : int = aten::size(%input.33, %948), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %950 : Long() = prim::NumToTensor(%949), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %951 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %952 : int = aten::size(%input.33, %951), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %953 : Long() = prim::NumToTensor(%952), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %954 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %955 : int = aten::size(%input.33, %954), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %956 : Long() = prim::NumToTensor(%955), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %957 : Long() = aten::mul_(%947, %953), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %958 : Long() = aten::mul_(%957, %956), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %959 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %960 : Byte() = aten::eq(%958, %959), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %961 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %962 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %963 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %964 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %965 : Float(10, 512, 7, 7) = aten::batch_norm(%input.33, %104, %105, %106, %107, %961, %962, %963, %964), scope: ResNet/Sequential[layer4]/BasicBlock[0]/Sequential[downsample]/BatchNorm2d[1]
  %966 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[0]
  %input.34 : Float(10, 512, 7, 7) = aten::add_(%922, %965, %966), scope: ResNet/Sequential[layer4]/BasicBlock[0]
  %968 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]
  %969 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]
  %970 : Float(10, 512, 7, 7) = aten::threshold_(%input.34, %968, %969), scope: ResNet/Sequential[layer4]/BasicBlock[0]/ReLU[relu]
  %971 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %972 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %973 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %974 : int[] = prim::ListConstruct(%972, %973), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %975 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %976 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %977 : int[] = prim::ListConstruct(%975, %976), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %978 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %979 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %980 : int[] = prim::ListConstruct(%978, %979), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %981 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %982 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %983 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %984 : int[] = prim::ListConstruct(%982, %983), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %985 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %986 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %987 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %988 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %input.35 : Float(10, 512, 7, 7) = aten::_convolution(%970, %109, %971, %974, %977, %980, %981, %984, %985, %986, %987, %988), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv1]
  %990 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %991 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %992 : Long() = aten::add_(%114, %990, %991), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %993 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %994 : int = aten::size(%input.35, %993), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %995 : Long() = prim::NumToTensor(%994), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %996 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %997 : int = aten::size(%input.35, %996), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %998 : Long() = prim::NumToTensor(%997), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %999 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1000 : int = aten::size(%input.35, %999), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1001 : Long() = prim::NumToTensor(%1000), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1002 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1003 : int = aten::size(%input.35, %1002), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1004 : Long() = prim::NumToTensor(%1003), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1005 : Long() = aten::mul_(%995, %1001), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1006 : Long() = aten::mul_(%1005, %1004), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1007 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1008 : Byte() = aten::eq(%1006, %1007), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1009 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1010 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1011 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1012 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %input.36 : Float(10, 512, 7, 7) = aten::batch_norm(%input.35, %110, %111, %112, %113, %1009, %1010, %1011, %1012), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn1]
  %1014 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]
  %1015 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]
  %1016 : Float(10, 512, 7, 7) = aten::threshold_(%input.36, %1014, %1015), scope: ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]
  %1017 : Tensor = prim::Undefined(), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1018 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1019 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1020 : int[] = prim::ListConstruct(%1018, %1019), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1021 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1022 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1023 : int[] = prim::ListConstruct(%1021, %1022), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1024 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1025 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1026 : int[] = prim::ListConstruct(%1024, %1025), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1027 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1028 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1029 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1030 : int[] = prim::ListConstruct(%1028, %1029), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1031 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1032 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1033 : bool = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1034 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %input.37 : Float(10, 512, 7, 7) = aten::_convolution(%1016, %115, %1017, %1020, %1023, %1026, %1027, %1030, %1031, %1032, %1033, %1034), scope: ResNet/Sequential[layer4]/BasicBlock[1]/Conv2d[conv2]
  %1036 : Long() = prim::Constant[value={1}](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1037 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1038 : Long() = aten::add_(%120, %1036, %1037), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1039 : int = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1040 : int = aten::size(%input.37, %1039), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1041 : Long() = prim::NumToTensor(%1040), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1042 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1043 : int = aten::size(%input.37, %1042), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1044 : Long() = prim::NumToTensor(%1043), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1045 : int = prim::Constant[value=2](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1046 : int = aten::size(%input.37, %1045), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1047 : Long() = prim::NumToTensor(%1046), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1048 : int = prim::Constant[value=3](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1049 : int = aten::size(%input.37, %1048), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1050 : Long() = prim::NumToTensor(%1049), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1051 : Long() = aten::mul_(%1041, %1047), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1052 : Long() = aten::mul_(%1051, %1050), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1053 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1054 : Byte() = aten::eq(%1052, %1053), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1055 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1056 : float = prim::Constant[value=0.1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1057 : float = prim::Constant[value=1e-05](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1058 : bool = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1059 : Float(10, 512, 7, 7) = aten::batch_norm(%input.37, %116, %117, %118, %119, %1055, %1056, %1057, %1058), scope: ResNet/Sequential[layer4]/BasicBlock[1]/BatchNorm2d[bn2]
  %1060 : int = prim::Constant[value=1](), scope: ResNet/Sequential[layer4]/BasicBlock[1]
  %input.38 : Float(10, 512, 7, 7) = aten::add_(%1059, %970, %1060), scope: ResNet/Sequential[layer4]/BasicBlock[1]
  %1062 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]
  %1063 : float = prim::Constant[value=0](), scope: ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]
  %input.39 : Float(10, 512, 7, 7) = aten::threshold_(%input.38, %1062, %1063), scope: ResNet/Sequential[layer4]/BasicBlock[1]/ReLU[relu]
  %1065 : int = prim::Constant[value=0](), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1066 : int = aten::size(%input.39, %1065), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1067 : Long() = prim::NumToTensor(%1066), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1068 : int = prim::Constant[value=1](), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1069 : int = aten::size(%input.39, %1068), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1070 : Long() = prim::NumToTensor(%1069), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1071 : int = prim::Constant[value=2](), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1072 : int = aten::size(%input.39, %1071), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1073 : Long() = prim::NumToTensor(%1072), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1074 : int = prim::Constant[value=3](), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1075 : int = aten::size(%input.39, %1074), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1076 : Long() = prim::NumToTensor(%1075), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1077 : int = prim::Constant[value=1](), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1078 : int = prim::Constant[value=1](), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1079 : int[] = prim::ListConstruct(%1077, %1078), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1080 : Float(10, 512, 1, 1) = aten::adaptive_avg_pool2d(%input.39, %1079), scope: ResNet/AdaptiveAvgPool2d[avgpool]
  %1081 : int = prim::Constant[value=0](), scope: ResNet
  %1082 : int = aten::size(%1080, %1081), scope: ResNet
  %1083 : Long() = prim::NumToTensor(%1082), scope: ResNet
  %1084 : int = prim::Int(%1083), scope: ResNet
  %1085 : int = prim::Constant[value=-1](), scope: ResNet
  %1086 : int[] = prim::ListConstruct(%1084, %1085), scope: ResNet
  %input : Float(10, 512) = aten::view(%1080, %1086), scope: ResNet
  %1088 : Float(512!, 1000!) = aten::t(%121), scope: ResNet/Linear[fc]
  %1089 : int = prim::Constant[value=1](), scope: ResNet/Linear[fc]
  %1090 : int = prim::Constant[value=1](), scope: ResNet/Linear[fc]
  %1091 : Float(10, 1000) = aten::addmm(%122, %input, %1088, %1089, %1090), scope: ResNet/Linear[fc]
  return (%1091);
}
