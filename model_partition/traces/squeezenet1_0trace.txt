graph(%0 : Float(10, 3, 224, 224)
      %1 : Float(96, 3, 7, 7)
      %2 : Float(96)
      %3 : Float(16, 96, 1, 1)
      %4 : Float(16)
      %5 : Float(64, 16, 1, 1)
      %6 : Float(64)
      %7 : Float(64, 16, 3, 3)
      %8 : Float(64)
      %9 : Float(16, 128, 1, 1)
      %10 : Float(16)
      %11 : Float(64, 16, 1, 1)
      %12 : Float(64)
      %13 : Float(64, 16, 3, 3)
      %14 : Float(64)
      %15 : Float(32, 128, 1, 1)
      %16 : Float(32)
      %17 : Float(128, 32, 1, 1)
      %18 : Float(128)
      %19 : Float(128, 32, 3, 3)
      %20 : Float(128)
      %21 : Float(32, 256, 1, 1)
      %22 : Float(32)
      %23 : Float(128, 32, 1, 1)
      %24 : Float(128)
      %25 : Float(128, 32, 3, 3)
      %26 : Float(128)
      %27 : Float(48, 256, 1, 1)
      %28 : Float(48)
      %29 : Float(192, 48, 1, 1)
      %30 : Float(192)
      %31 : Float(192, 48, 3, 3)
      %32 : Float(192)
      %33 : Float(48, 384, 1, 1)
      %34 : Float(48)
      %35 : Float(192, 48, 1, 1)
      %36 : Float(192)
      %37 : Float(192, 48, 3, 3)
      %38 : Float(192)
      %39 : Float(64, 384, 1, 1)
      %40 : Float(64)
      %41 : Float(256, 64, 1, 1)
      %42 : Float(256)
      %43 : Float(256, 64, 3, 3)
      %44 : Float(256)
      %45 : Float(64, 512, 1, 1)
      %46 : Float(64)
      %47 : Float(256, 64, 1, 1)
      %48 : Float(256)
      %49 : Float(256, 64, 3, 3)
      %50 : Float(256)
      %51 : Float(1000, 512, 1, 1)
      %52 : Float(1000)) {
  %53 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %54 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %55 : int[] = prim::ListConstruct(%53, %54), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %56 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %57 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %58 : int[] = prim::ListConstruct(%56, %57), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %59 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %60 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %61 : int[] = prim::ListConstruct(%59, %60), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %62 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %63 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %64 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %65 : int[] = prim::ListConstruct(%63, %64), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %66 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %67 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %68 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %69 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %input.1 : Float(10, 96, 109, 109) = aten::_convolution(%0, %1, %2, %55, %58, %61, %62, %65, %66, %67, %68, %69), scope: SqueezeNet/Sequential[features]/Conv2d[0]
  %71 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/ReLU[1]
  %72 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/ReLU[1]
  %input.2 : Float(10, 96, 109, 109) = aten::threshold_(%input.1, %71, %72), scope: SqueezeNet/Sequential[features]/ReLU[1]
  %74 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %75 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %76 : int[] = prim::ListConstruct(%74, %75), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %77 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %78 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %79 : int[] = prim::ListConstruct(%77, %78), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %80 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %81 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %82 : int[] = prim::ListConstruct(%80, %81), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %83 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %84 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %85 : int[] = prim::ListConstruct(%83, %84), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %86 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %87 : Float(10, 96, 54, 54), %88 : Long(10, 96, 54, 54) = aten::max_pool2d_with_indices(%input.2, %76, %79, %82, %85, %86), scope: SqueezeNet/Sequential[features]/MaxPool2d[2]
  %89 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %90 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %91 : int[] = prim::ListConstruct(%89, %90), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %92 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %93 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %94 : int[] = prim::ListConstruct(%92, %93), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %95 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %96 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %97 : int[] = prim::ListConstruct(%95, %96), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %98 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %99 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %100 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %101 : int[] = prim::ListConstruct(%99, %100), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %102 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %103 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %104 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %105 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %input.3 : Float(10, 16, 54, 54) = aten::_convolution(%87, %3, %4, %91, %94, %97, %98, %101, %102, %103, %104, %105), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[squeeze]
  %107 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[squeeze_activation]
  %108 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[squeeze_activation]
  %109 : Float(10, 16, 54, 54) = aten::threshold_(%input.3, %107, %108), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[squeeze_activation]
  %110 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %111 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %112 : int[] = prim::ListConstruct(%110, %111), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %113 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %114 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %115 : int[] = prim::ListConstruct(%113, %114), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %116 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %117 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %118 : int[] = prim::ListConstruct(%116, %117), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %119 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %120 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %121 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %122 : int[] = prim::ListConstruct(%120, %121), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %123 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %124 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %125 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %126 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %input.4 : Float(10, 64, 54, 54) = aten::_convolution(%109, %5, %6, %112, %115, %118, %119, %122, %123, %124, %125, %126), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand1x1]
  %128 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[expand1x1_activation]
  %129 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[expand1x1_activation]
  %130 : Float(10, 64, 54, 54) = aten::threshold_(%input.4, %128, %129), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[expand1x1_activation]
  %131 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %132 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %133 : int[] = prim::ListConstruct(%131, %132), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %134 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %135 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %136 : int[] = prim::ListConstruct(%134, %135), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %137 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %138 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %139 : int[] = prim::ListConstruct(%137, %138), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %140 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %141 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %142 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %143 : int[] = prim::ListConstruct(%141, %142), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %144 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %145 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %146 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %147 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %input.5 : Float(10, 64, 54, 54) = aten::_convolution(%109, %7, %8, %133, %136, %139, %140, %143, %144, %145, %146, %147), scope: SqueezeNet/Sequential[features]/Fire[3]/Conv2d[expand3x3]
  %149 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[expand3x3_activation]
  %150 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[expand3x3_activation]
  %151 : Float(10, 64, 54, 54) = aten::threshold_(%input.5, %149, %150), scope: SqueezeNet/Sequential[features]/Fire[3]/ReLU[expand3x3_activation]
  %152 : Tensor[] = prim::ListConstruct(%130, %151), scope: SqueezeNet/Sequential[features]/Fire[3]
  %153 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[3]
  %154 : Float(10, 128, 54, 54) = aten::cat(%152, %153), scope: SqueezeNet/Sequential[features]/Fire[3]
  %155 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %156 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %157 : int[] = prim::ListConstruct(%155, %156), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %158 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %159 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %160 : int[] = prim::ListConstruct(%158, %159), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %161 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %162 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %163 : int[] = prim::ListConstruct(%161, %162), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %164 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %165 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %166 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %167 : int[] = prim::ListConstruct(%165, %166), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %168 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %169 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %170 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %171 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %input.6 : Float(10, 16, 54, 54) = aten::_convolution(%154, %9, %10, %157, %160, %163, %164, %167, %168, %169, %170, %171), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[squeeze]
  %173 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[squeeze_activation]
  %174 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[squeeze_activation]
  %175 : Float(10, 16, 54, 54) = aten::threshold_(%input.6, %173, %174), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[squeeze_activation]
  %176 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %177 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %178 : int[] = prim::ListConstruct(%176, %177), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %179 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %180 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %181 : int[] = prim::ListConstruct(%179, %180), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %182 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %183 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %184 : int[] = prim::ListConstruct(%182, %183), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %185 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %186 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %187 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %188 : int[] = prim::ListConstruct(%186, %187), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %189 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %190 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %191 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %192 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %input.7 : Float(10, 64, 54, 54) = aten::_convolution(%175, %11, %12, %178, %181, %184, %185, %188, %189, %190, %191, %192), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand1x1]
  %194 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[expand1x1_activation]
  %195 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[expand1x1_activation]
  %196 : Float(10, 64, 54, 54) = aten::threshold_(%input.7, %194, %195), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[expand1x1_activation]
  %197 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %198 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %199 : int[] = prim::ListConstruct(%197, %198), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %200 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %201 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %202 : int[] = prim::ListConstruct(%200, %201), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %203 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %204 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %205 : int[] = prim::ListConstruct(%203, %204), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %206 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %207 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %208 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %209 : int[] = prim::ListConstruct(%207, %208), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %210 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %211 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %212 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %213 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %input.8 : Float(10, 64, 54, 54) = aten::_convolution(%175, %13, %14, %199, %202, %205, %206, %209, %210, %211, %212, %213), scope: SqueezeNet/Sequential[features]/Fire[4]/Conv2d[expand3x3]
  %215 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[expand3x3_activation]
  %216 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[expand3x3_activation]
  %217 : Float(10, 64, 54, 54) = aten::threshold_(%input.8, %215, %216), scope: SqueezeNet/Sequential[features]/Fire[4]/ReLU[expand3x3_activation]
  %218 : Tensor[] = prim::ListConstruct(%196, %217), scope: SqueezeNet/Sequential[features]/Fire[4]
  %219 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[4]
  %220 : Float(10, 128, 54, 54) = aten::cat(%218, %219), scope: SqueezeNet/Sequential[features]/Fire[4]
  %221 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %222 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %223 : int[] = prim::ListConstruct(%221, %222), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %224 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %225 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %226 : int[] = prim::ListConstruct(%224, %225), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %227 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %228 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %229 : int[] = prim::ListConstruct(%227, %228), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %230 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %231 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %232 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %233 : int[] = prim::ListConstruct(%231, %232), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %234 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %235 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %236 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %237 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %input.9 : Float(10, 32, 54, 54) = aten::_convolution(%220, %15, %16, %223, %226, %229, %230, %233, %234, %235, %236, %237), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[squeeze]
  %239 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[squeeze_activation]
  %240 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[squeeze_activation]
  %241 : Float(10, 32, 54, 54) = aten::threshold_(%input.9, %239, %240), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[squeeze_activation]
  %242 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %243 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %244 : int[] = prim::ListConstruct(%242, %243), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %245 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %246 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %247 : int[] = prim::ListConstruct(%245, %246), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %248 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %249 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %250 : int[] = prim::ListConstruct(%248, %249), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %251 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %252 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %253 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %254 : int[] = prim::ListConstruct(%252, %253), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %255 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %256 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %257 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %258 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %input.10 : Float(10, 128, 54, 54) = aten::_convolution(%241, %17, %18, %244, %247, %250, %251, %254, %255, %256, %257, %258), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand1x1]
  %260 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[expand1x1_activation]
  %261 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[expand1x1_activation]
  %262 : Float(10, 128, 54, 54) = aten::threshold_(%input.10, %260, %261), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[expand1x1_activation]
  %263 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %264 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %265 : int[] = prim::ListConstruct(%263, %264), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %266 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %267 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %268 : int[] = prim::ListConstruct(%266, %267), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %269 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %270 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %271 : int[] = prim::ListConstruct(%269, %270), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %272 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %273 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %274 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %275 : int[] = prim::ListConstruct(%273, %274), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %276 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %277 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %278 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %279 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %input.11 : Float(10, 128, 54, 54) = aten::_convolution(%241, %19, %20, %265, %268, %271, %272, %275, %276, %277, %278, %279), scope: SqueezeNet/Sequential[features]/Fire[5]/Conv2d[expand3x3]
  %281 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[expand3x3_activation]
  %282 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[expand3x3_activation]
  %283 : Float(10, 128, 54, 54) = aten::threshold_(%input.11, %281, %282), scope: SqueezeNet/Sequential[features]/Fire[5]/ReLU[expand3x3_activation]
  %284 : Tensor[] = prim::ListConstruct(%262, %283), scope: SqueezeNet/Sequential[features]/Fire[5]
  %285 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[5]
  %input.12 : Float(10, 256, 54, 54) = aten::cat(%284, %285), scope: SqueezeNet/Sequential[features]/Fire[5]
  %287 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %288 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %289 : int[] = prim::ListConstruct(%287, %288), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %290 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %291 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %292 : int[] = prim::ListConstruct(%290, %291), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %293 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %294 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %295 : int[] = prim::ListConstruct(%293, %294), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %296 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %297 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %298 : int[] = prim::ListConstruct(%296, %297), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %299 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %300 : Float(10, 256, 27, 27), %301 : Long(10, 256, 27, 27) = aten::max_pool2d_with_indices(%input.12, %289, %292, %295, %298, %299), scope: SqueezeNet/Sequential[features]/MaxPool2d[6]
  %302 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %303 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %304 : int[] = prim::ListConstruct(%302, %303), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %305 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %306 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %307 : int[] = prim::ListConstruct(%305, %306), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %308 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %309 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %310 : int[] = prim::ListConstruct(%308, %309), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %311 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %312 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %313 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %314 : int[] = prim::ListConstruct(%312, %313), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %315 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %316 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %317 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %318 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %input.13 : Float(10, 32, 27, 27) = aten::_convolution(%300, %21, %22, %304, %307, %310, %311, %314, %315, %316, %317, %318), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[squeeze]
  %320 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[squeeze_activation]
  %321 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[squeeze_activation]
  %322 : Float(10, 32, 27, 27) = aten::threshold_(%input.13, %320, %321), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[squeeze_activation]
  %323 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %324 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %325 : int[] = prim::ListConstruct(%323, %324), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %326 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %327 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %328 : int[] = prim::ListConstruct(%326, %327), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %329 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %330 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %331 : int[] = prim::ListConstruct(%329, %330), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %332 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %333 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %334 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %335 : int[] = prim::ListConstruct(%333, %334), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %336 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %337 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %338 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %339 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %input.14 : Float(10, 128, 27, 27) = aten::_convolution(%322, %23, %24, %325, %328, %331, %332, %335, %336, %337, %338, %339), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand1x1]
  %341 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[expand1x1_activation]
  %342 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[expand1x1_activation]
  %343 : Float(10, 128, 27, 27) = aten::threshold_(%input.14, %341, %342), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[expand1x1_activation]
  %344 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %345 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %346 : int[] = prim::ListConstruct(%344, %345), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %347 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %348 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %349 : int[] = prim::ListConstruct(%347, %348), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %350 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %351 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %352 : int[] = prim::ListConstruct(%350, %351), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %353 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %354 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %355 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %356 : int[] = prim::ListConstruct(%354, %355), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %357 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %358 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %359 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %360 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %input.15 : Float(10, 128, 27, 27) = aten::_convolution(%322, %25, %26, %346, %349, %352, %353, %356, %357, %358, %359, %360), scope: SqueezeNet/Sequential[features]/Fire[7]/Conv2d[expand3x3]
  %362 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[expand3x3_activation]
  %363 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[expand3x3_activation]
  %364 : Float(10, 128, 27, 27) = aten::threshold_(%input.15, %362, %363), scope: SqueezeNet/Sequential[features]/Fire[7]/ReLU[expand3x3_activation]
  %365 : Tensor[] = prim::ListConstruct(%343, %364), scope: SqueezeNet/Sequential[features]/Fire[7]
  %366 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[7]
  %367 : Float(10, 256, 27, 27) = aten::cat(%365, %366), scope: SqueezeNet/Sequential[features]/Fire[7]
  %368 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %369 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %370 : int[] = prim::ListConstruct(%368, %369), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %371 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %372 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %373 : int[] = prim::ListConstruct(%371, %372), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %374 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %375 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %376 : int[] = prim::ListConstruct(%374, %375), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %377 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %378 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %379 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %380 : int[] = prim::ListConstruct(%378, %379), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %381 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %382 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %383 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %384 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %input.16 : Float(10, 48, 27, 27) = aten::_convolution(%367, %27, %28, %370, %373, %376, %377, %380, %381, %382, %383, %384), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[squeeze]
  %386 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[squeeze_activation]
  %387 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[squeeze_activation]
  %388 : Float(10, 48, 27, 27) = aten::threshold_(%input.16, %386, %387), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[squeeze_activation]
  %389 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %390 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %391 : int[] = prim::ListConstruct(%389, %390), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %392 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %393 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %394 : int[] = prim::ListConstruct(%392, %393), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %395 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %396 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %397 : int[] = prim::ListConstruct(%395, %396), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %398 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %399 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %400 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %401 : int[] = prim::ListConstruct(%399, %400), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %402 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %403 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %404 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %405 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %input.17 : Float(10, 192, 27, 27) = aten::_convolution(%388, %29, %30, %391, %394, %397, %398, %401, %402, %403, %404, %405), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand1x1]
  %407 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[expand1x1_activation]
  %408 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[expand1x1_activation]
  %409 : Float(10, 192, 27, 27) = aten::threshold_(%input.17, %407, %408), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[expand1x1_activation]
  %410 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %411 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %412 : int[] = prim::ListConstruct(%410, %411), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %413 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %414 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %415 : int[] = prim::ListConstruct(%413, %414), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %416 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %417 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %418 : int[] = prim::ListConstruct(%416, %417), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %419 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %420 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %421 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %422 : int[] = prim::ListConstruct(%420, %421), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %423 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %424 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %425 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %426 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %input.18 : Float(10, 192, 27, 27) = aten::_convolution(%388, %31, %32, %412, %415, %418, %419, %422, %423, %424, %425, %426), scope: SqueezeNet/Sequential[features]/Fire[8]/Conv2d[expand3x3]
  %428 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[expand3x3_activation]
  %429 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[expand3x3_activation]
  %430 : Float(10, 192, 27, 27) = aten::threshold_(%input.18, %428, %429), scope: SqueezeNet/Sequential[features]/Fire[8]/ReLU[expand3x3_activation]
  %431 : Tensor[] = prim::ListConstruct(%409, %430), scope: SqueezeNet/Sequential[features]/Fire[8]
  %432 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[8]
  %433 : Float(10, 384, 27, 27) = aten::cat(%431, %432), scope: SqueezeNet/Sequential[features]/Fire[8]
  %434 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %435 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %436 : int[] = prim::ListConstruct(%434, %435), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %437 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %438 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %439 : int[] = prim::ListConstruct(%437, %438), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %440 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %441 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %442 : int[] = prim::ListConstruct(%440, %441), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %443 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %444 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %445 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %446 : int[] = prim::ListConstruct(%444, %445), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %447 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %448 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %449 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %450 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %input.19 : Float(10, 48, 27, 27) = aten::_convolution(%433, %33, %34, %436, %439, %442, %443, %446, %447, %448, %449, %450), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[squeeze]
  %452 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[squeeze_activation]
  %453 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[squeeze_activation]
  %454 : Float(10, 48, 27, 27) = aten::threshold_(%input.19, %452, %453), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[squeeze_activation]
  %455 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %456 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %457 : int[] = prim::ListConstruct(%455, %456), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %458 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %459 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %460 : int[] = prim::ListConstruct(%458, %459), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %461 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %462 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %463 : int[] = prim::ListConstruct(%461, %462), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %464 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %465 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %466 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %467 : int[] = prim::ListConstruct(%465, %466), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %468 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %469 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %470 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %471 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %input.20 : Float(10, 192, 27, 27) = aten::_convolution(%454, %35, %36, %457, %460, %463, %464, %467, %468, %469, %470, %471), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand1x1]
  %473 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[expand1x1_activation]
  %474 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[expand1x1_activation]
  %475 : Float(10, 192, 27, 27) = aten::threshold_(%input.20, %473, %474), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[expand1x1_activation]
  %476 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %477 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %478 : int[] = prim::ListConstruct(%476, %477), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %479 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %480 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %481 : int[] = prim::ListConstruct(%479, %480), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %482 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %483 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %484 : int[] = prim::ListConstruct(%482, %483), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %485 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %486 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %487 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %488 : int[] = prim::ListConstruct(%486, %487), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %489 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %490 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %491 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %492 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %input.21 : Float(10, 192, 27, 27) = aten::_convolution(%454, %37, %38, %478, %481, %484, %485, %488, %489, %490, %491, %492), scope: SqueezeNet/Sequential[features]/Fire[9]/Conv2d[expand3x3]
  %494 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[expand3x3_activation]
  %495 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[expand3x3_activation]
  %496 : Float(10, 192, 27, 27) = aten::threshold_(%input.21, %494, %495), scope: SqueezeNet/Sequential[features]/Fire[9]/ReLU[expand3x3_activation]
  %497 : Tensor[] = prim::ListConstruct(%475, %496), scope: SqueezeNet/Sequential[features]/Fire[9]
  %498 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[9]
  %499 : Float(10, 384, 27, 27) = aten::cat(%497, %498), scope: SqueezeNet/Sequential[features]/Fire[9]
  %500 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %501 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %502 : int[] = prim::ListConstruct(%500, %501), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %503 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %504 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %505 : int[] = prim::ListConstruct(%503, %504), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %506 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %507 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %508 : int[] = prim::ListConstruct(%506, %507), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %509 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %510 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %511 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %512 : int[] = prim::ListConstruct(%510, %511), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %513 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %514 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %515 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %516 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %input.22 : Float(10, 64, 27, 27) = aten::_convolution(%499, %39, %40, %502, %505, %508, %509, %512, %513, %514, %515, %516), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[squeeze]
  %518 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[squeeze_activation]
  %519 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[squeeze_activation]
  %520 : Float(10, 64, 27, 27) = aten::threshold_(%input.22, %518, %519), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[squeeze_activation]
  %521 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %522 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %523 : int[] = prim::ListConstruct(%521, %522), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %524 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %525 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %526 : int[] = prim::ListConstruct(%524, %525), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %527 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %528 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %529 : int[] = prim::ListConstruct(%527, %528), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %530 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %531 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %532 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %533 : int[] = prim::ListConstruct(%531, %532), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %534 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %535 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %536 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %537 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %input.23 : Float(10, 256, 27, 27) = aten::_convolution(%520, %41, %42, %523, %526, %529, %530, %533, %534, %535, %536, %537), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand1x1]
  %539 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[expand1x1_activation]
  %540 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[expand1x1_activation]
  %541 : Float(10, 256, 27, 27) = aten::threshold_(%input.23, %539, %540), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[expand1x1_activation]
  %542 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %543 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %544 : int[] = prim::ListConstruct(%542, %543), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %545 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %546 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %547 : int[] = prim::ListConstruct(%545, %546), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %548 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %549 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %550 : int[] = prim::ListConstruct(%548, %549), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %551 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %552 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %553 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %554 : int[] = prim::ListConstruct(%552, %553), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %555 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %556 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %557 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %558 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %input.24 : Float(10, 256, 27, 27) = aten::_convolution(%520, %43, %44, %544, %547, %550, %551, %554, %555, %556, %557, %558), scope: SqueezeNet/Sequential[features]/Fire[10]/Conv2d[expand3x3]
  %560 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[expand3x3_activation]
  %561 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[expand3x3_activation]
  %562 : Float(10, 256, 27, 27) = aten::threshold_(%input.24, %560, %561), scope: SqueezeNet/Sequential[features]/Fire[10]/ReLU[expand3x3_activation]
  %563 : Tensor[] = prim::ListConstruct(%541, %562), scope: SqueezeNet/Sequential[features]/Fire[10]
  %564 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[10]
  %input.25 : Float(10, 512, 27, 27) = aten::cat(%563, %564), scope: SqueezeNet/Sequential[features]/Fire[10]
  %566 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %567 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %568 : int[] = prim::ListConstruct(%566, %567), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %569 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %570 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %571 : int[] = prim::ListConstruct(%569, %570), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %572 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %573 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %574 : int[] = prim::ListConstruct(%572, %573), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %575 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %576 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %577 : int[] = prim::ListConstruct(%575, %576), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %578 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %579 : Float(10, 512, 13, 13), %580 : Long(10, 512, 13, 13) = aten::max_pool2d_with_indices(%input.25, %568, %571, %574, %577, %578), scope: SqueezeNet/Sequential[features]/MaxPool2d[11]
  %581 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %582 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %583 : int[] = prim::ListConstruct(%581, %582), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %584 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %585 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %586 : int[] = prim::ListConstruct(%584, %585), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %587 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %588 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %589 : int[] = prim::ListConstruct(%587, %588), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %590 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %591 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %592 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %593 : int[] = prim::ListConstruct(%591, %592), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %594 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %595 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %596 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %597 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %input.26 : Float(10, 64, 13, 13) = aten::_convolution(%579, %45, %46, %583, %586, %589, %590, %593, %594, %595, %596, %597), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[squeeze]
  %599 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[squeeze_activation]
  %600 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[squeeze_activation]
  %601 : Float(10, 64, 13, 13) = aten::threshold_(%input.26, %599, %600), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[squeeze_activation]
  %602 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %603 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %604 : int[] = prim::ListConstruct(%602, %603), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %605 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %606 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %607 : int[] = prim::ListConstruct(%605, %606), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %608 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %609 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %610 : int[] = prim::ListConstruct(%608, %609), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %611 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %612 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %613 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %614 : int[] = prim::ListConstruct(%612, %613), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %615 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %616 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %617 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %618 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %input.27 : Float(10, 256, 13, 13) = aten::_convolution(%601, %47, %48, %604, %607, %610, %611, %614, %615, %616, %617, %618), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand1x1]
  %620 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[expand1x1_activation]
  %621 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[expand1x1_activation]
  %622 : Float(10, 256, 13, 13) = aten::threshold_(%input.27, %620, %621), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[expand1x1_activation]
  %623 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %624 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %625 : int[] = prim::ListConstruct(%623, %624), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %626 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %627 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %628 : int[] = prim::ListConstruct(%626, %627), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %629 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %630 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %631 : int[] = prim::ListConstruct(%629, %630), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %632 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %633 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %634 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %635 : int[] = prim::ListConstruct(%633, %634), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %636 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %637 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %638 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %639 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %input.28 : Float(10, 256, 13, 13) = aten::_convolution(%601, %49, %50, %625, %628, %631, %632, %635, %636, %637, %638, %639), scope: SqueezeNet/Sequential[features]/Fire[12]/Conv2d[expand3x3]
  %641 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[expand3x3_activation]
  %642 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[expand3x3_activation]
  %643 : Float(10, 256, 13, 13) = aten::threshold_(%input.28, %641, %642), scope: SqueezeNet/Sequential[features]/Fire[12]/ReLU[expand3x3_activation]
  %644 : Tensor[] = prim::ListConstruct(%622, %643), scope: SqueezeNet/Sequential[features]/Fire[12]
  %645 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[features]/Fire[12]
  %input.29 : Float(10, 512, 13, 13) = aten::cat(%644, %645), scope: SqueezeNet/Sequential[features]/Fire[12]
  %647 : float = prim::Constant[value=0.5](), scope: SqueezeNet/Sequential[classifier]/Dropout[0]
  %648 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Dropout[0]
  %649 : Float(10, 512, 13, 13) = aten::dropout(%input.29, %647, %648), scope: SqueezeNet/Sequential[classifier]/Dropout[0]
  %650 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %651 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %652 : int[] = prim::ListConstruct(%650, %651), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %653 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %654 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %655 : int[] = prim::ListConstruct(%653, %654), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %656 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %657 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %658 : int[] = prim::ListConstruct(%656, %657), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %659 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %660 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %661 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %662 : int[] = prim::ListConstruct(%660, %661), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %663 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %664 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %665 : bool = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %666 : bool = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %input.30 : Float(10, 1000, 13, 13) = aten::_convolution(%649, %51, %52, %652, %655, %658, %659, %662, %663, %664, %665, %666), scope: SqueezeNet/Sequential[classifier]/Conv2d[1]
  %668 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/ReLU[2]
  %669 : float = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/ReLU[2]
  %input : Float(10, 1000, 13, 13) = aten::threshold_(%input.30, %668, %669), scope: SqueezeNet/Sequential[classifier]/ReLU[2]
  %671 : int = prim::Constant[value=0](), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %672 : int = aten::size(%input, %671), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %673 : Long() = prim::NumToTensor(%672), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %674 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %675 : int = aten::size(%input, %674), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %676 : Long() = prim::NumToTensor(%675), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %677 : int = prim::Constant[value=2](), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %678 : int = aten::size(%input, %677), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %679 : Long() = prim::NumToTensor(%678), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %680 : int = prim::Constant[value=3](), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %681 : int = aten::size(%input, %680), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %682 : Long() = prim::NumToTensor(%681), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %683 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %684 : int = prim::Constant[value=1](), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %685 : int[] = prim::ListConstruct(%683, %684), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %686 : Float(10, 1000, 1, 1) = aten::adaptive_avg_pool2d(%input, %685), scope: SqueezeNet/Sequential[classifier]/AdaptiveAvgPool2d[3]
  %687 : int = prim::Constant[value=0](), scope: SqueezeNet
  %688 : int = aten::size(%686, %687), scope: SqueezeNet
  %689 : Long() = prim::NumToTensor(%688), scope: SqueezeNet
  %690 : int = prim::Int(%689), scope: SqueezeNet
  %691 : int = prim::Constant[value=1000](), scope: SqueezeNet
  %692 : int[] = prim::ListConstruct(%690, %691), scope: SqueezeNet
  %693 : Float(10, 1000) = aten::view(%686, %692), scope: SqueezeNet
  return (%693);
}
